# coding: utf-8

"""
    PhotoPrism API

    API request bodies and responses are usually JSON-encoded, except for binary data and some of the OAuth2 endpoints. Note that the `Content-Type` header must be set to `application/json` for this, as the request may otherwise fail with error 400. When clients have a valid access token, e.g. obtained through the `POST /api/v1/session` or `POST /api/v1/oauth/token` endpoint, they can use a standard Bearer Authorization header to authenticate their requests. Submitting the access token with a custom `X-Auth-Token` header is supported as well.  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class EntityUserDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'birth_year': 'int',
        'birth_month': 'int',
        'birth_day': 'int',
        'name_title': 'str',
        'given_name': 'str',
        'middle_name': 'str',
        'family_name': 'str',
        'name_suffix': 'str',
        'nick_name': 'str',
        'name_src': 'str',
        'gender': 'str',
        'about': 'str',
        'bio': 'str',
        'location': 'str',
        'country': 'str',
        'phone': 'str',
        'site_url': 'str',
        'profile_url': 'str',
        'org_title': 'str',
        'org_name': 'str',
        'org_email': 'str',
        'org_phone': 'str',
        'org_url': 'str',
        'created_at': 'str',
        'updated_at': 'str'
    }

    attribute_map = {
        'birth_year': 'BirthYear',
        'birth_month': 'BirthMonth',
        'birth_day': 'BirthDay',
        'name_title': 'NameTitle',
        'given_name': 'GivenName',
        'middle_name': 'MiddleName',
        'family_name': 'FamilyName',
        'name_suffix': 'NameSuffix',
        'nick_name': 'NickName',
        'name_src': 'NameSrc',
        'gender': 'Gender',
        'about': 'About',
        'bio': 'Bio',
        'location': 'Location',
        'country': 'Country',
        'phone': 'Phone',
        'site_url': 'SiteURL',
        'profile_url': 'ProfileURL',
        'org_title': 'OrgTitle',
        'org_name': 'OrgName',
        'org_email': 'OrgEmail',
        'org_phone': 'OrgPhone',
        'org_url': 'OrgURL',
        'created_at': 'CreatedAt',
        'updated_at': 'UpdatedAt'
    }

    def __init__(self, birth_year=None, birth_month=None, birth_day=None, name_title=None, given_name=None, middle_name=None, family_name=None, name_suffix=None, nick_name=None, name_src=None, gender=None, about=None, bio=None, location=None, country=None, phone=None, site_url=None, profile_url=None, org_title=None, org_name=None, org_email=None, org_phone=None, org_url=None, created_at=None, updated_at=None, _configuration=None):  # noqa: E501
        """EntityUserDetails - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._birth_year = None
        self._birth_month = None
        self._birth_day = None
        self._name_title = None
        self._given_name = None
        self._middle_name = None
        self._family_name = None
        self._name_suffix = None
        self._nick_name = None
        self._name_src = None
        self._gender = None
        self._about = None
        self._bio = None
        self._location = None
        self._country = None
        self._phone = None
        self._site_url = None
        self._profile_url = None
        self._org_title = None
        self._org_name = None
        self._org_email = None
        self._org_phone = None
        self._org_url = None
        self._created_at = None
        self._updated_at = None
        self.discriminator = None

        if birth_year is not None:
            self.birth_year = birth_year
        if birth_month is not None:
            self.birth_month = birth_month
        if birth_day is not None:
            self.birth_day = birth_day
        if name_title is not None:
            self.name_title = name_title
        if given_name is not None:
            self.given_name = given_name
        if middle_name is not None:
            self.middle_name = middle_name
        if family_name is not None:
            self.family_name = family_name
        if name_suffix is not None:
            self.name_suffix = name_suffix
        if nick_name is not None:
            self.nick_name = nick_name
        if name_src is not None:
            self.name_src = name_src
        if gender is not None:
            self.gender = gender
        if about is not None:
            self.about = about
        if bio is not None:
            self.bio = bio
        if location is not None:
            self.location = location
        if country is not None:
            self.country = country
        if phone is not None:
            self.phone = phone
        if site_url is not None:
            self.site_url = site_url
        if profile_url is not None:
            self.profile_url = profile_url
        if org_title is not None:
            self.org_title = org_title
        if org_name is not None:
            self.org_name = org_name
        if org_email is not None:
            self.org_email = org_email
        if org_phone is not None:
            self.org_phone = org_phone
        if org_url is not None:
            self.org_url = org_url
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at

    @property
    def birth_year(self):
        """Gets the birth_year of this EntityUserDetails.  # noqa: E501


        :return: The birth_year of this EntityUserDetails.  # noqa: E501
        :rtype: int
        """
        return self._birth_year

    @birth_year.setter
    def birth_year(self, birth_year):
        """Sets the birth_year of this EntityUserDetails.


        :param birth_year: The birth_year of this EntityUserDetails.  # noqa: E501
        :type: int
        """

        self._birth_year = birth_year

    @property
    def birth_month(self):
        """Gets the birth_month of this EntityUserDetails.  # noqa: E501


        :return: The birth_month of this EntityUserDetails.  # noqa: E501
        :rtype: int
        """
        return self._birth_month

    @birth_month.setter
    def birth_month(self, birth_month):
        """Sets the birth_month of this EntityUserDetails.


        :param birth_month: The birth_month of this EntityUserDetails.  # noqa: E501
        :type: int
        """

        self._birth_month = birth_month

    @property
    def birth_day(self):
        """Gets the birth_day of this EntityUserDetails.  # noqa: E501


        :return: The birth_day of this EntityUserDetails.  # noqa: E501
        :rtype: int
        """
        return self._birth_day

    @birth_day.setter
    def birth_day(self, birth_day):
        """Sets the birth_day of this EntityUserDetails.


        :param birth_day: The birth_day of this EntityUserDetails.  # noqa: E501
        :type: int
        """

        self._birth_day = birth_day

    @property
    def name_title(self):
        """Gets the name_title of this EntityUserDetails.  # noqa: E501


        :return: The name_title of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._name_title

    @name_title.setter
    def name_title(self, name_title):
        """Sets the name_title of this EntityUserDetails.


        :param name_title: The name_title of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._name_title = name_title

    @property
    def given_name(self):
        """Gets the given_name of this EntityUserDetails.  # noqa: E501


        :return: The given_name of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._given_name

    @given_name.setter
    def given_name(self, given_name):
        """Sets the given_name of this EntityUserDetails.


        :param given_name: The given_name of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._given_name = given_name

    @property
    def middle_name(self):
        """Gets the middle_name of this EntityUserDetails.  # noqa: E501


        :return: The middle_name of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this EntityUserDetails.


        :param middle_name: The middle_name of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._middle_name = middle_name

    @property
    def family_name(self):
        """Gets the family_name of this EntityUserDetails.  # noqa: E501


        :return: The family_name of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._family_name

    @family_name.setter
    def family_name(self, family_name):
        """Sets the family_name of this EntityUserDetails.


        :param family_name: The family_name of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._family_name = family_name

    @property
    def name_suffix(self):
        """Gets the name_suffix of this EntityUserDetails.  # noqa: E501


        :return: The name_suffix of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._name_suffix

    @name_suffix.setter
    def name_suffix(self, name_suffix):
        """Sets the name_suffix of this EntityUserDetails.


        :param name_suffix: The name_suffix of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._name_suffix = name_suffix

    @property
    def nick_name(self):
        """Gets the nick_name of this EntityUserDetails.  # noqa: E501


        :return: The nick_name of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._nick_name

    @nick_name.setter
    def nick_name(self, nick_name):
        """Sets the nick_name of this EntityUserDetails.


        :param nick_name: The nick_name of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._nick_name = nick_name

    @property
    def name_src(self):
        """Gets the name_src of this EntityUserDetails.  # noqa: E501


        :return: The name_src of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._name_src

    @name_src.setter
    def name_src(self, name_src):
        """Sets the name_src of this EntityUserDetails.


        :param name_src: The name_src of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._name_src = name_src

    @property
    def gender(self):
        """Gets the gender of this EntityUserDetails.  # noqa: E501


        :return: The gender of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this EntityUserDetails.


        :param gender: The gender of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._gender = gender

    @property
    def about(self):
        """Gets the about of this EntityUserDetails.  # noqa: E501


        :return: The about of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._about

    @about.setter
    def about(self, about):
        """Sets the about of this EntityUserDetails.


        :param about: The about of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._about = about

    @property
    def bio(self):
        """Gets the bio of this EntityUserDetails.  # noqa: E501


        :return: The bio of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._bio

    @bio.setter
    def bio(self, bio):
        """Sets the bio of this EntityUserDetails.


        :param bio: The bio of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._bio = bio

    @property
    def location(self):
        """Gets the location of this EntityUserDetails.  # noqa: E501


        :return: The location of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this EntityUserDetails.


        :param location: The location of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._location = location

    @property
    def country(self):
        """Gets the country of this EntityUserDetails.  # noqa: E501


        :return: The country of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this EntityUserDetails.


        :param country: The country of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._country = country

    @property
    def phone(self):
        """Gets the phone of this EntityUserDetails.  # noqa: E501


        :return: The phone of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this EntityUserDetails.


        :param phone: The phone of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def site_url(self):
        """Gets the site_url of this EntityUserDetails.  # noqa: E501


        :return: The site_url of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._site_url

    @site_url.setter
    def site_url(self, site_url):
        """Sets the site_url of this EntityUserDetails.


        :param site_url: The site_url of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._site_url = site_url

    @property
    def profile_url(self):
        """Gets the profile_url of this EntityUserDetails.  # noqa: E501


        :return: The profile_url of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._profile_url

    @profile_url.setter
    def profile_url(self, profile_url):
        """Sets the profile_url of this EntityUserDetails.


        :param profile_url: The profile_url of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._profile_url = profile_url

    @property
    def org_title(self):
        """Gets the org_title of this EntityUserDetails.  # noqa: E501


        :return: The org_title of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._org_title

    @org_title.setter
    def org_title(self, org_title):
        """Sets the org_title of this EntityUserDetails.


        :param org_title: The org_title of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._org_title = org_title

    @property
    def org_name(self):
        """Gets the org_name of this EntityUserDetails.  # noqa: E501


        :return: The org_name of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._org_name

    @org_name.setter
    def org_name(self, org_name):
        """Sets the org_name of this EntityUserDetails.


        :param org_name: The org_name of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._org_name = org_name

    @property
    def org_email(self):
        """Gets the org_email of this EntityUserDetails.  # noqa: E501


        :return: The org_email of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._org_email

    @org_email.setter
    def org_email(self, org_email):
        """Sets the org_email of this EntityUserDetails.


        :param org_email: The org_email of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._org_email = org_email

    @property
    def org_phone(self):
        """Gets the org_phone of this EntityUserDetails.  # noqa: E501


        :return: The org_phone of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._org_phone

    @org_phone.setter
    def org_phone(self, org_phone):
        """Sets the org_phone of this EntityUserDetails.


        :param org_phone: The org_phone of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._org_phone = org_phone

    @property
    def org_url(self):
        """Gets the org_url of this EntityUserDetails.  # noqa: E501


        :return: The org_url of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._org_url

    @org_url.setter
    def org_url(self, org_url):
        """Sets the org_url of this EntityUserDetails.


        :param org_url: The org_url of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._org_url = org_url

    @property
    def created_at(self):
        """Gets the created_at of this EntityUserDetails.  # noqa: E501


        :return: The created_at of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this EntityUserDetails.


        :param created_at: The created_at of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this EntityUserDetails.  # noqa: E501


        :return: The updated_at of this EntityUserDetails.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this EntityUserDetails.


        :param updated_at: The updated_at of this EntityUserDetails.  # noqa: E501
        :type: str
        """

        self._updated_at = updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EntityUserDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EntityUserDetails):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, EntityUserDetails):
            return True

        return self.to_dict() != other.to_dict()
